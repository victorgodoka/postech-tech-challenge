version: '3.8'

services:
  dashboard:
    build:
      context: .
      dockerfile: ./apps/dashboard/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    networks:
      - microfrontends-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`localhost`)"
      - "traefik.http.services.dashboard.loadbalancer.server.port=3000"

  transactions:
    build:
      context: .
      dockerfile: ./apps/transactions/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3001
    networks:
      - microfrontends-network
    restart: unless-stopped
    depends_on:
      - dashboard
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - microfrontends-network
    restart: unless-stopped
    depends_on:
      - dashboard
      - transactions
      - home

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - microfrontends-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  microfrontends-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

  services:
    dashboard:
      logging: *default-logging
    transactions:
      logging: *default-logging
    home:
      logging: *default-logging
    nginx:
      logging: *default-logging
    redis:
      logging: *default-logging
    traefik:
      logging: *default-logging
